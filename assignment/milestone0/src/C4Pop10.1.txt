# test move parsing: empty
enterMove
_pstate
# test move parsing: normal
enterMove Pass
_pstate
enterMove Place B
_pstate
enterMove Keep D
_pstate
enterMove Take C place E
_pstate
# test move parsing: many spaces
enterMove                 Pass                       
_pstate
enterMove                 Place                 B                 
_pstate
enterMove                 Keep                 D                 
_pstate
enterMove                 Take                 C                 place                 E
_pstate
# test move parsing: no spaces
enterMove PlaceB
_pstate
enterMove KeepD
_pstate
enterMove TakeC placeE
_pstate
enterMove TakeCplaceE
_pstate
enterMove Take cplace E
_pstate
# test move parsing: case
enterMove pass
_pstate
enterMove pASS
_pstate
enterMove PaSs
_pstate
enterMove PASS
_pstate
enterMove Place b
_pstate
enterMove place b
_pstate
enterMove PlAce B
_pstate
enterMove PLACE B
_pstate
enterMove Keep d
_pstate
enterMove keep d
_pstate
enterMove KeEp D
_pstate
enterMove KEEP D
_pstate
enterMove Take c place e
_pstate
enterMove take C place E
_pstate
enterMove take c place e
_pstate
enterMove Take c Place e
_pstate
enterMove Take C Place E
_pstate
# test move parsing: extra spaces
enterMove P ass
_pstate
enterMove P a s s
_pstate
enterMove P lace B
_pstate
enterMove P l a c e B
_pstate
enterMove K eep D
_pstate
enterMove K e e p D
_pstate
enterMove T ake C place E
_pstate
enterMove Take C p lace E
_pstate
enterMove T a k e C p l a c e E
_pstate
# test move parsing: invalid moves
enterMove al;kbja;lkdjf
_pstate
enterMove Take al;ksdjf;
_pstate
enterMove enterMove
_pstate
# test move parsing: no column
enterMove Place
_pstate
enterMove Keep
_pstate
enterMove Take  place E
_pstate
enterMove Take C place
_pstate
# test move parsing: wrong move type
enterMove [1,2]
_pstate
enterMove c1 -> d2
_pstate
enterMove c1 -> d2 -> e3
_pstate
# test move parsing: wrong order
enterMove Place E take C
_pstate
enterMove place E Take C
_pstate
# test move parsing: too many cols
\# A test comment
enterMove Place B B
_pstate
enterMove Place BB
_pstate
enterMove Keep D
_pstate
enterMove Keep D D
_pstate
enterMove Take C place E E
_pstate
enterMove Take C Place EE
_pstate
enterMove Take C C place E
_pstate
enterMove Take CC place E
_pstate
enterMove Take C C place E E
_pstate
enterMove Take CC place EE
_pstate
# test move parsing: oob col
enterMove Place @
_pstate
enterMove Place `
_pstate
enterMove Place H
_pstate
enterMove Keep h
_pstate
enterMove Keep @
_pstate
enterMove Keep `
_pstate
enterMove Keep H
_pstate
enterMove Keep h
_pstate
enterMove Take C place @
_pstate
enterMove Take C place `
_pstate
enterMove Take C place H
_pstate
enterMove Take C place h
_pstate
enterMove Take @ place E
_pstate
enterMove Take ` place E
_pstate
enterMove Take H place E
_pstate
enterMove Take h place E
_pstate
enterMove Take @ place @
_pstate
enterMove Take ` place `
_pstate
enterMove Take H place H
_pstate
enterMove Take h place h
_pstate


setOptions
sure
setOptions
ny
setOptions
  yn
100
120
50
50
setOptions
yes
100 120 50 50
100 testabc
100
testabc
120


  50  




50 testabc
        50

_state
