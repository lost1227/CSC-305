setOptions
sure
setOption
ny
setOptions
  yn
300
100
20
setOptions


yes
300 100 20
300 testabc


300

        100   

20 testabc
20

# test move parsing: empty
enterMove
_pstate
# test move parsing: many spaces
enterMove                                                                                                     C1                                                                       -> D2
_pstate
# test move parsing: lowercase
enterMove c1 -> d2
_pstate
# test move parsing: mixed case
enterMove c1 -> D2
_pstate
enterMove C1 -> d2
_pstate
# test move parsing: no spaces
enterMove c1->d2
_pstate
# test move parsing: spaces inside cells
enterMove c    1->d    2
_pstate
enterMove c     1         ->    d             2
_pstate
# test move parsing: spaces inside delimiter
enterMove c1 -   > d2
_pstate
# test move parsing: no delimiter
enterMove c1 d2
_pstate
enterMove c1
_pstate
enterMove c12
_pstate
# test move parsing: wrong delimiter
enterMove c1 <- d2
_pstate
enterMove c1 _> d2
_pstate
enterMove c1 *> d2
_pstate
# test move parsing: extra characters
enterMove c1 -> d2 asldkjjfjalk
_pstate
enterMove a;lskdfjalk; c1 -> d2
_pstate
# test move parsing: only one cell
enterMove c1
_pstate
# test move parsing: wrong move type
enterMove [1,2]
_pstate
enterMove Pass
_pstate
enterMove Place B
_pstate
enterMove Keep D
_pstate
enterMove Take C place E
_pstate
# test move parsing: multiple rows
enterMove CC1 -> d2
_pstate
enterMove Cc1 -> d2
_pstate
enterMove Ac1 -> d2
_pstate
enterMove c    c1 -> d2
_pstate
enterMove c1 -> DD2
_pstate
enterMove C1 -> Dd2
_pstate
enterMove c1 -> cD2
_pstate
enterMove c1 -> d      d2
_pstate
enterMove 1 -> d2
_pstate
enterMove c1 -> 2
_pstate
# test move parsing: oob row
enterMove A0 -> d2
_pstate
enterMove B0 -> d2
_pstate
enterMove D0 -> d2
_pstate
enterMove E0 -> d2
_pstate
enterMove C0 -> d2
_pstate
enterMove F0 -> d2
_pstate
enterMove G0 -> d2
_pstate
enterMove H0 -> d2
_pstate
enterMove A-1 -> d2
_pstate
enterMove B-1 -> d2
_pstate
enterMove D-1 -> d2
_pstate
enterMove E-1 -> d2
_pstate
enterMove C-1 -> d2
_pstate
enterMove F-1 -> d2
_pstate
enterMove G-1 -> d2
_pstate
enterMove H-1 -> d2
_pstate
enterMove c1 -> a0
_pstate
enterMove c1 -> b0
_pstate
enterMove c1 -> c0
_pstate
enterMove c1 -> d0
_pstate
enterMove c1 -> e0
_pstate
enterMove c1 -> f0
_pstate
enterMove c1 -> g0
_pstate
enterMove c1 -> h0
_pstate
enterMove c1 -> a-1
_pstate
enterMove c1 -> b-1
_pstate
enterMove c1 -> c-1
_pstate
enterMove c1 -> d-1
_pstate
enterMove c1 -> e-1
_pstate
enterMove c1 -> f-1
_pstate
enterMove c1 -> g-1
_pstate
enterMove c1 -> h-1
_pstate
enterMove A9 -> d2
_pstate
enterMove B9 -> d2
_pstate
enterMove D9 -> d2
_pstate
enterMove E9 -> d2
_pstate
enterMove C9 -> d2
_pstate
enterMove F9 -> d2
_pstate
enterMove G9 -> d2
_pstate
enterMove H9 -> d2
_pstate
enterMove c1 -> a9
_pstate
enterMove c1 -> b9
_pstate
enterMove c1 -> c9
_pstate
enterMove c1 -> d9
_pstate
enterMove c1 -> e9
_pstate
enterMove c1 -> f9
_pstate
enterMove c1 -> g9
_pstate
enterMove c1 -> h9
_pstate
enterMove A10 -> d2
_pstate
enterMove B10 -> d2
_pstate
enterMove D10 -> d2
_pstate
enterMove E10 -> d2
_pstate
enterMove C10 -> d2
_pstate
enterMove F10 -> d2
_pstate
enterMove G10 -> d2
_pstate
enterMove H10 -> d2
_pstate
enterMove c1 -> a10
_pstate
enterMove c1 -> b10
_pstate
enterMove c1 -> c10
_pstate
enterMove c1 -> d10
_pstate
enterMove c1 -> e10
_pstate
enterMove c1 -> f10
_pstate
enterMove c1 -> g10
_pstate
enterMove c1 -> h10
_pstate
# test move parsing: oob column
enterMove I1 -> d2
_pstate
enterMove I2 -> d2
_pstate
enterMove I3 -> d2
_pstate
enterMove I4 -> d2
_pstate
enterMove I5 -> d2
_pstate
enterMove I6 -> d2
_pstate
enterMove I7 -> d2
_pstate
enterMove I8 -> d2
_pstate
enterMove c1 -> I1
_pstate
enterMove c1 -> I2
_pstate
enterMove c1 -> I3
_pstate
enterMove c1 -> I4
_pstate
enterMove c1 -> I5
_pstate
enterMove c1 -> I6
_pstate
enterMove c1 -> I7
_pstate
enterMove c1 -> I8
_pstate
enterMove i1 -> d2
_pstate
enterMove i2 -> d2
_pstate
enterMove i3 -> d2
_pstate
enterMove i4 -> d2
_pstate
enterMove i5 -> d2
_pstate
enterMove i6 -> d2
_pstate
enterMove i7 -> d2
_pstate
enterMove i8 -> d2
_pstate
enterMove c1 -> i1
_pstate
enterMove c1 -> i2
_pstate
enterMove c1 -> i3
_pstate
enterMove c1 -> i4
_pstate
enterMove c1 -> i5
_pstate
enterMove c1 -> i6
_pstate
enterMove c1 -> i7
_pstate
enterMove c1 -> i8
_pstate
enterMove @1 -> d2
_pstate
enterMove @2 -> d2
_pstate
enterMove @3 -> d2
_pstate
enterMove @4 -> d2
_pstate
enterMove @5 -> d2
_pstate
enterMove @6 -> d2
_pstate
enterMove @7 -> d2
_pstate
enterMove @8 -> d2
_pstate
enterMove c1 -> @1
_pstate
enterMove c1 -> @2
_pstate
enterMove c1 -> @3
_pstate
enterMove c1 -> @4
_pstate
enterMove c1 -> @5
_pstate
enterMove c1 -> @6
_pstate
enterMove c1 -> @7
_pstate
enterMove c1 -> @8
_pstate
enterMove `1 -> d2
_pstate
enterMove `2 -> d2
_pstate
enterMove `3 -> d2
_pstate
enterMove `4 -> d2
_pstate
enterMove `5 -> d2
_pstate
enterMove `6 -> d2
_pstate
enterMove `7 -> d2
_pstate
enterMove `8 -> d2
_pstate
enterMove c1 -> `1
_pstate
enterMove c1 -> `2
_pstate
enterMove c1 -> `3
_pstate
enterMove c1 -> `4
_pstate
enterMove c1 -> `5
_pstate
enterMove c1 -> `6
_pstate
enterMove c1 -> `7
_pstate
enterMove c1 -> `8
# test move parsing: oob both
enterMove @0 -> d2
_pstate
enterMove `0 -> d2
_pstate
enterMove I0 -> d2
_pstate
enterMove i0 -> d2
_pstate
enterMove @9 -> d2
_pstate
enterMove `9 -> d2
_pstate
enterMove I9 -> d2
_pstate
enterMove i9 -> d2
_pstate
enterMove c1 -> @0
_pstate
enterMove c1 -> `0
_pstate
enterMove c1 -> I0
_pstate
enterMove c1 -> i0
_pstate
enterMove c1 -> @9
_pstate
enterMove c1 -> `9
_pstate
enterMove c1 -> I9
_pstate
enterMove c1 -> i9
_pstate
# test move parsing: multijump
enterMove c1 -> d2 -> e3
_pstate
enterMove c1 -> d2 -> e3 -> f4 -> a1 -> c1
_pstate
